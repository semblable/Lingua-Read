{"ast":null,"code":"import { create } from 'zustand';\nimport { jwtDecode } from 'jwt-decode';\nexport const useAuthStore = create(set => ({\n  token: null,\n  user: null,\n  setToken: token => {\n    localStorage.setItem('token', token);\n    const decodedToken = jwtDecode(token);\n    set({\n      token,\n      user: {\n        id: decodedToken.sub,\n        email: decodedToken.email\n      }\n    });\n  },\n  clearToken: () => {\n    localStorage.removeItem('token');\n    set({\n      token: null,\n      user: null\n    });\n  }\n}));\nexport const useTextsStore = create(set => ({\n  texts: [],\n  loading: false,\n  error: null,\n  setTexts: texts => set({\n    texts\n  }),\n  addText: text => set(state => ({\n    texts: [...state.texts, text]\n  })),\n  setLoading: loading => set({\n    loading\n  }),\n  setError: error => set({\n    error\n  })\n}));\nexport const useCurrentTextStore = create(set => ({\n  text: null,\n  loading: false,\n  error: null,\n  setText: text => set({\n    text\n  }),\n  setLoading: loading => set({\n    loading\n  }),\n  setError: error => set({\n    error\n  }),\n  updateWord: (wordId, status) => set(state => ({\n    text: Object.assign({}, state.text, {\n      words: state.text.words.map(word => word.wordId === wordId ? Object.assign({}, word, {\n        status\n      }) : word)\n    })\n  }))\n}));\nexport const useWordModalStore = create(set => ({\n  isOpen: false,\n  word: null,\n  translation: '',\n  openModal: (word, translation = '') => set({\n    isOpen: true,\n    word,\n    translation\n  }),\n  closeModal: () => set({\n    isOpen: false,\n    word: null,\n    translation: ''\n  }),\n  setTranslation: translation => set({\n    translation\n  })\n}));","map":{"version":3,"names":["create","jwtDecode","useAuthStore","set","token","user","setToken","localStorage","setItem","decodedToken","id","sub","email","clearToken","removeItem","useTextsStore","texts","loading","error","setTexts","addText","text","state","setLoading","setError","useCurrentTextStore","setText","updateWord","wordId","status","Object","assign","words","map","word","useWordModalStore","isOpen","translation","openModal","closeModal","setTranslation"],"sources":["C:/Users/kamil/Dropbox/Lingua_Read/client/lingua-read-client/src/utils/store.js"],"sourcesContent":["import { create } from 'zustand';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\n// Auth Store\r\nexport const useAuthStore = create((set) => ({\r\n  token: null,\r\n  user: null,\r\n  setToken: (token) => {\r\n    localStorage.setItem('token', token);\r\n    const decodedToken = jwtDecode(token);\r\n    set({ \r\n      token, \r\n      user: {\r\n        id: decodedToken.sub,\r\n        email: decodedToken.email\r\n      }\r\n    });\r\n  },\r\n  clearToken: () => {\r\n    localStorage.removeItem('token');\r\n    set({ token: null, user: null });\r\n  }\r\n}));\r\n\r\n// Texts Store\r\nexport const useTextsStore = create((set) => ({\r\n  texts: [],\r\n  loading: false,\r\n  error: null,\r\n  setTexts: (texts) => set({ texts }),\r\n  addText: (text) => set((state) => ({ texts: [...state.texts, text] })),\r\n  setLoading: (loading) => set({ loading }),\r\n  setError: (error) => set({ error })\r\n}));\r\n\r\n// Current Text Store\r\nexport const useCurrentTextStore = create((set) => ({\r\n  text: null,\r\n  loading: false,\r\n  error: null,\r\n  setText: (text) => set({ text }),\r\n  setLoading: (loading) => set({ loading }),\r\n  setError: (error) => set({ error }),\r\n  updateWord: (wordId, status) => set((state) => ({\r\n    text: {\r\n      ...state.text,\r\n      words: state.text.words.map(word => \r\n        word.wordId === wordId \r\n          ? { ...word, status } \r\n          : word\r\n      )\r\n    }\r\n  }))\r\n}));\r\n\r\n// Word Modal Store\r\nexport const useWordModalStore = create((set) => ({\r\n  isOpen: false,\r\n  word: null,\r\n  translation: '',\r\n  openModal: (word, translation = '') => set({ isOpen: true, word, translation }),\r\n  closeModal: () => set({ isOpen: false, word: null, translation: '' }),\r\n  setTranslation: (translation) => set({ translation })\r\n})); "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}